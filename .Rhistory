exam(data = GM, y = Adj.Close, time = "day")
#E-mini Natural Gas Futures, Continuous Contract #1 (QG1) (Front Month)
Quandl("CHRIS/CME_QG1", collapse = 'daily', start_date = "2016-01-01", end_date = "2020-03-25") %>%
mutate(date = as.Date(Date)) %>%
exam(y = "Settle", time = "day")
exam <- function(data, y, time = "day") {
if (time == 'day'){
input <- select(data, date, {{y}})
data <- left_join(Day_t, input, by = "date") %>%
select(-date)
#correlation matrix
rac <- as.data.frame(
cor(data, use = "na.or.complete"))
}
else if (time == 'month'){
input <- select(data, date, {{y}})
data <- left_join(Month_t, input, by = "date") %>%
select(-date)
#correlation matrix
rac <- as.data.frame(
cor(data, use = "na.or.complete"))
}
else(print("Error Help AHHHHHHH"))
#We only want last column of race
#start running table?
#for now just print it out
arrange(rac, desc(abs({{y}}))) %>%
select({{y}}) %>%
filter({{y}} != 1)
#Choose close variables and plot them with data
}
exam(data = GM, y = Adj.Close, time = "day")
#E-mini Natural Gas Futures, Continuous Contract #1 (QG1) (Front Month)
Quandl("CHRIS/CME_QG1", collapse = 'daily', start_date = "2016-01-01", end_date = "2020-03-25") %>%
names()
#E-mini Natural Gas Futures, Continuous Contract #1 (QG1) (Front Month)
q <- Quandl("CHRIS/CME_QG1", collapse = 'daily', start_date = "2016-01-01", end_date = "2020-03-25")
q %>%
mutate(date = as.Date(Date)) %>%
exam(y = "Settle", time = "day")
View(q)
q %>%
mutate(date = as.Date(Date)) %>%
exam(y = "Settle", time = "day")
q %>%
mutate(date = as.Date(Date)) %>%
exam(y = Settle, time = "day")
#E-mini Natural Gas Futures, Continuous Contract #1 (QG1) (Front Month)
Quandl("CHRIS/CME_QG1", collapse = 'daily', start_date = "2016-01-01", end_date = "2020-03-25") %>%
mutate(date = as.Date(Date)) %>%
exam(y = Settle, time = "day")
#E-mini Natural Gas Futures, Continuous Contract #2 (QG2)
Quandl("CHRIS/CME_QG2", collapse = 'daily', start_date="2016-01-01", end_date="2020-03-25") %>%
names()
#E-mini Natural Gas Futures, Continuous Contract #2 (QG2)
Quandl("CHRIS/CME_QG2", collapse = 'daily', start_date="2016-01-01", end_date="2020-03-25") %>%
mutate(date = as.Date(Date)) %>%
exam("Settle", 'day')
#E-mini Natural Gas Futures, Continuous Contract #2 (QG2)
Quandl("CHRIS/CME_QG2", collapse = 'daily', start_date="2016-01-01", end_date="2020-03-25") %>%
mutate(date = as.Date(Date)) %>%
exam(Settle, 'day')
View(q)
#E-mini Natural Gas Futures, Continuous Contract #2 (QG2)
Quandl("CHRIS/CME_QG2", collapse = 'daily', start_date="2016-01-01", end_date="2020-03-25") %>%
mutate(date = as.Date(Date)) %>%
exam(Settle, 'day')
#E-mini Natural Gas Futures, Continuous Contract #2 (QG2)
Quandl("CHRIS/CME_QG2", collapse = 'daily', start_date="2016-01-01", end_date="2020-03-25") %>%
mutate(date = as.Date(Date)) %>%
exam(Volume, 'day')
#E-mini Natural Gas Futures, Continuous Contract #2 (QG2)
Quandl("CHRIS/CME_QG2", collapse = 'daily', start_date="2016-01-01", end_date="2020-03-25") %>%
mutate(date = as.Date(Date)) %>%
exam(Settle, 'day')
#90 Day Bank Accepted Bills Futures, Continuous Contract #1 (IR1) (Front Month)
Quandl("CHRIS/ASX_IR1", collapse = 'daily', start_date="2016-01-01", end_date="2020-03-25") %>%
names()
#90 Day Bank Accepted Bills Futures, Continuous Contract #1 (IR1) (Front Month)
Quandl("CHRIS/ASX_IR1", collapse = 'daily', start_date="2016-01-01", end_date="2020-03-25") %>%
mutate(date = as.Date(Date)) %>%
exam(Previous Settlement, 'day')
#90 Day Bank Accepted Bills Futures, Continuous Contract #1 (IR1) (Front Month)
Quandl("CHRIS/ASX_IR1", collapse = 'daily', start_date="2016-01-01", end_date="2020-03-25") %>%
mutate(date = as.Date(Date)) %>%
exam(`Previous Settlement`, 'day')
#House Price Indices - Seattle-Tacoma-Bellevue WA
Quandl("FMAC/HPI_42660", collapse = 'monthly', start_date = "2016-01-01", end_date = "2020-03-31")
#House Price Indices - Seattle-Tacoma-Bellevue WA
Quandl("FMAC/HPI_42660", collapse = 'monthly', start_date = "2016-01-01", end_date = "2020-03-31") %>%
#House Price Indices - Seattle-Tacoma-Bellevue WA
Quandl("FMAC/HPI_42660", collapse = 'monthly', start_date = "2016-01-01", end_date = "2020-03-31") %>%
mutate(date = as.Date(floor_date(Date))) %>%
exam(`NSA Value`, 'month')
#House Price Indices - Seattle-Tacoma-Bellevue WA
Quandl("FMAC/HPI_42660", collapse = 'monthly', start_date = "2016-01-01", end_date = "2020-03-31") %>%
mutate(date = as.Date(floor_date(Date))) %>%
exam(`NSA Value`, 'month')
#House Price Indices - Seattle-Tacoma-Bellevue WA
Quandl("FMAC/HPI_42660", collapse = 'monthly', start_date = "2016-01-01", end_date = "2020-03-31") %>%
mutate(date = as.Date(floor_date(Date)))
#House Price Indices - Seattle-Tacoma-Bellevue WA
Quandl("FMAC/HPI_42660", collapse = 'monthly', start_date = "2016-01-01", end_date = "2020-03-31") %>%
#House Price Indices - Seattle-Tacoma-Bellevue WA
Quandl("FMAC/HPI_42660", collapse = 'monthly', start_date = "2016-01-01", end_date = "2020-03-31") %>%
mutate(date = floor_date(as.Date(Date)))
#House Price Indices - Seattle-Tacoma-Bellevue WA
Quandl("FMAC/HPI_42660", collapse = 'monthly', start_date = "2016-01-01", end_date = "2020-03-31") %>%
mutate(date = floor_date(as.Date(Date)))
#House Price Indices - Seattle-Tacoma-Bellevue WA
q <- Quandl("FMAC/HPI_42660", collapse = 'monthly', start_date = "2016-01-01", end_date = "2020-03-31") %>%
mutate(date = floor_date(as.Date(Date)))
class(q$Date)
class(q$date)
#House Price Indices - Seattle-Tacoma-Bellevue WA
Quandl("FMAC/HPI_42660", collapse = 'monthly', start_date = "2016-01-01", end_date = "2020-03-31") %>%
mutate(date = floor_date(as.Date(Date))) %>%
exam(`NSA Value`, 'month')
View(q)
#House Price Indices - Seattle-Tacoma-Bellevue WA
Quandl("FMAC/HPI_42660", collapse = 'monthly', start_date = "2016-01-01", end_date = "2020-03-31") %>%
mutate(date = floor_date(as.Date(Date)))
floor_date(q$Date)
floor_date(q$date)
mutate(date = floor_date(Date, unit = "month")
#House Price Indices - Seattle-Tacoma-Bellevue WA
Quandl("FMAC/HPI_42660", collapse = 'monthly', start_date = "2016-01-01", end_date = "2020-03-31") %>%
mutate(date = floor_date(Date, unit = "month"))
mutate(q, date = floor_date(Date, unit = "month"))
#House Price Indices - Seattle-Tacoma-Bellevue WA
Quandl("FMAC/HPI_42660", collapse = 'monthly', start_date = "2016-01-01", end_date = "2020-03-31") %>%
mutate(date = floor_date(Date, unit = "month")) %>%
exam(`NSA Value`, 'month')
#HPI - Washington State
Quandl("FMAC/HPI_WA", collapse = 'monthly', start_date ="2016-01-01", end_date ="2020-03-31") %>%
mutate(date = floor_date(Date, unit = "month")) %>%
exam(`NSA Value`, 'month')
#15-Year Fixed Rate Mortgage Average in the United States
Quandl("FMAC/15US", collapse = 'monthly', start_date = "2016-01-01", end_date = "2020-03-31") %>%
mutate(date = floor_date(Date, unit = "month")) %>%
exam(`Value`, 'month')
#30-Year Fixed Rate Mortgage Average in the United States
Quandl("FMAC/30US", collapse = 'monthly', start_date ="2016-01-01", end_date ="2020-03-31") %>%
names()
#30-Year Fixed Rate Mortgage Average in the United States
Quandl("FMAC/30US", collapse = 'monthly', start_date ="2016-01-01", end_date ="2020-03-31") %>%
mutate(date = floor_date(Date, unit = "month")) %>%
exam(`Value`, 'month')
#5/1-Year Adjustable Rate Mortgage Average in the United States
Quandl("FMAC/5US", collapse = 'monthly', start_date ="2016-01-01", end_date ="2020-03-31") %>%
mutate(date = floor_date(Date, unit = "month")) %>%
exam(`Value`, 'month')
# Consumer Confidence Index full list
cci <- read_csv("data/DP_LIVE_08092021052121834.csv")
cci %>%
head()
cci %>%
mutate(date = floor_date(TIME, unit = "month")) %>%
exam(`Value`, 'month')
cci %>%
mutate(date = floor_date(as.Date(TIME), unit = "month")) %>%
exam(`Value`, 'month')
class(cci$TIME)
cci$date <- as.Date(ccci$TIME)
cci$date <- as.Date(cci$TIME)
cci$date <- as.Date(cci$TIME, format = "%Y%b")
head(cci)
cci$date <- as.Date(cci$TIME, format = "%Y%b%d")
cci$date <- as.Date(cci$TIME, format = "%Y-%b")
head(cci)
cci$date <- as.Date(cci$TIME, format = "%Y%b")
head(cci)
cci$date <- as.Date(cci$TIME, format = "%Y%b%%")
head(cci)
cci$date <- as.Date(cci$TIME, format = "%Y%b%%%")
head(cci)
cci$date <- as.Date(cci$TIME, format = "%Y%m")
head(cci)
cci$date <- as.Date(cci$TIME, format = "%Y%m%%")
head(cci)
cci$date <- as.Date(cci$TIME, format = "%Y-%m")
head(cci)
cci$date <- as.Date(cci$TIME, format = "%Y-%m")
head(cci)
as.Date(cci$TIME, format = "%Y-%m")
cci$date <- as.Date(cci$TIME, format = "%Y-%mm")
head(cci)
cci$date <- as.Date(cci$TIME, format = "%Y-%m-%d")
head(cci)
cci$date <- as.Date(cci$TIME, format = "%Y-%m%t")
head(cci)
cci$date <- as.Date(cci$TIME, format = "%t%Y-%m%t")
head(cci)
cci$date <- as.Date(cci$TIME, format = "%Y-%M")
head(cci)
cci$date <- as.Date(cci$TIME, format = "%Y--%M")
head(cci)
cci$date <- as.Date(cci$TIME, format = "%Y--%m")
head(cci)
cci$date <- as.Date(cci$TIME, format = "%Y-%M")
head(cci)
unique(cci$date)
# Consumer Confidence Index full list
cci <- read_csv("data/DP_LIVE_08092021052121834.csv")
# Consumer Confidence Index full list
cci <- read_csv("data/ConsumerConfidenceUSA.csv")
cci$date <- as.Date(cci$TIME, format = "%Y-%M")
head(cci)
cci$date <- as.Date(cci$TIME, format = "%Y-%m")
head(cci)
View(cci)
cci$date <- as.Date(cci$TIME, format = "%Y-%b")
head(cci)
cci$date <- as.Date(cci$TIME, format = "%Y-%t")
head(cci)
cci$date <- as.Date(cci$TIME, format = "%Y-%r")
head(cci)
cci$date <- as.Date(cci$TIME, format = "%Y-%B")
head(cci)
cci$date <- as.Date(cci$TIME, format = "%Y-%r")
head(cci)
cci$date <- as.Date(cci$TIME, format = "%Y-%l")
head(cci)
cci$date <- as.Date(cci$TIME, format = "%Y-%mm")
head(cci)
as.character(201603)
cci$date <- as.Date(paste0(as.charactercci$TIME, '-01'), format = '%Y%m%d')
cci$date <- as.Date(paste0(as.character(cci$TIME, '-01'), format = '%Y%m%d')
cci$date <- as.Date(paste0(as.character(cci$TIME, '-01')), format = '%Y%m%d')
cci$date <- as.Date(paste0(as.character(cci$TIME, '-01')), format = '%Y%m%d')
head(cci)
cci$TIME <- as.Date(paste0(as.character(cci$TIME, '-01')), format = '%Y%m%d')
head(cci)
cci$TIME <- paste0(as.character(cci$TIME, '-01'))
head(cci)
cci %>%
mutate(date = paste0(as.character(TIME, '-01'))) %>%
head
cci %>%
mutate(date = paste0(as.character(cci$TIME, '-01'))) %>%
head
head(cci)
# Consumer Confidence Index full list
cci <- read_csv("data/ConsumerConfidenceUSA.csv")
cci %>%
mutate(date = paste0(as.character(TIME, '-01'))) %>%
head
head(cci)
cci %>%
mutate(date = paste0(as.character(TIME, '-01'))) %>%
head()
cci %>%
mutate(date = paste(as.character(TIME, '-01'))) %>%
head()
cci %>%
mutate(date = str_c(as.character(TIME), '-01')) %>%
head()
cci %>%
mutate(date = str_c(as.character(TIME), '-01')) %>%
as.Date(date)
mutate(date = as.Date(str_c(as.character(TIME), '-01', format = "%Y%m%d") %>%
ccci <- cci %>%
mutate(date = as.Date(str_c(as.character(TIME), '-01'), format = "%Y%m%d")) %>%
head(cci)
ccci <- cci %>%
mutate(date = as.Date(str_c(as.character(TIME), '-01'), format = "%Y%m%d")) %>%
head(cci)
ccci <- cci %>%
mutate(date = as.Date(str_c(as.character(TIME), '-01'), format = "%Y%m%d"))
cci %>%
mutate(date = as.Date(str_c(as.character(TIME), '-01'), format = "%Y%m%d"))
# Consumer Confidence Index full list
cci <- read_csv("data/ConsumerConfidenceUSA.csv")
cci %>%
mutate(date = as.Date(str_c(as.character(TIME), '-01'), format = "%Y%m%d"))
cci %>%
mutate(date = as.Date(str_c(as.character(TIME), '-01'), format = "%Y%M%d"))
cci %>%
mutate(date = str_c(as.character(TIME), '-01'))
cci %>%
mutate(date = str_c(as.character(TIME), '-01')) %>%
mutate(date = as.Date(date, format = "%Y%m%d"))
cci %>%
mutate(date = str_c(as.character(TIME), '-01')) %>%
mutate(date = as.Date(date, format = "%Y%M"))
cci %>%
mutate(date = str_c(as.character(TIME), '-01')) %>%
mutate(date = as.Date(date, format = "%Y%t"))
cci %>%
mutate(date = str_c(as.character(TIME), '-01')) %>%
mutate(date = as.Date(date, format = "%Y-%m-%d"))
cci %>%
mutate(date = str_c(as.character(TIME), '-01')) %>%
mutate(date = as.Date(date, format = "%Y-%m-%d")) %>%
exam(`Value`, 'month')
# SAAR light vehicle sales
SAAR1 <- read_csv("data/ALTSALES.csv")
head(SAAR1)
# SAAR light vehicle sales
SAAR1 <- read_csv("data/ALTSALES.csv")
mutate(SAAR1, date = Date) %>%
exam(`ALTSALES`, 'month')
mutate(SAAR1, date = DATE) %>%
exam(`ALTSALES`, 'month')
# Total Vehicle  Sales
SAAR2 <- read_csv("data/TOTALSA.csv")
mutate(SAAR2, date = DATE) %>%
exam(`TOTALSA`, 'month')
#Light Trucks https://fred.stlouisfed.org/series/LTRUCKSA
SAAR3 <- read_csv("data/LTRUCKSA.csv")
mutate(SAAR3, date = DATE) %>%
exam(`LTRUCKSA`, 'month')
# one more corrgram of our metrics
corrgram(Day_t)
View(Day_t)
# one more corrgram of our metrics
corrgram(Day_t, upper.panel = panel.pie)
#OPEC crude oil
oil <- Quandl(code = "OPEC/ORB", collapse = 'daily',
start_date = "2016-01-01", end_date = "2020-03-25", force_irregular = TRUE)
oil <- left_join(blank_d, oil, by =  c("date" = "Date"))
#cor
cor(Day_t$cp, oil$Value, use = "na.or.complete")
#GM data
GM <- read.csv("data/GM.csv")
GM$date <- as.Date(GM$Date)
GM <- left_join(blank_d, GM, by =  "date")
cor(Day_t$cp, GM$Adj.Close, use = "na.or.complete")
ggplot() + geom_line(data = Day_t, aes(date, fgp_a_lead/max(fgp_a_lead, na.rm = T))) +
geom_line(data = GM, aes(date, Adj.Close/max(Adj.Close, na.rm = T)))
print(a)
exam(data = GM, y = Adj.Close, time = "day")
exam <- function(data, y, time = "day") {
if (time == 'day'){
input <- select(data, date, {{y}})
data <- left_join(Day_t, input, by = "date") %>%
select(-date)
#correlation matrix
rac <- as.data.frame(
cor(data, use = "na.or.complete"))
}
else if (time == 'month'){
input <- select(data, date, {{y}})
data <- left_join(Month_t, input, by = "date") %>%
select(-date)
#correlation matrix
rac <- as.data.frame(
cor(data, use = "na.or.complete"))
}
else(print("Error Help AHHHHHHH"))
#We only want last column of race
#start running table?
#for now just print it out
arrange(rac, desc(abs({{y}}))) %>%
select({{y}}) %>%
filter({{y}} != 1)
#Choose close variables and plot them with data
}
#E-mini Natural Gas Futures, Continuous Contract #1 (QG1) (Front Month)
Quandl("CHRIS/CME_QG1", collapse = 'daily', start_date = "2016-01-01", end_date = "2020-03-25") %>%
mutate(date = as.Date(Date)) %>%
exam(y = Settle, time = "day")
#E-mini Natural Gas Futures, Continuous Contract #2 (QG2)
Quandl("CHRIS/CME_QG2", collapse = 'daily', start_date="2016-01-01", end_date="2020-03-25") %>%
mutate(date = as.Date(Date)) %>%
exam(Settle, 'day')
#90 Day Bank Accepted Bills Futures, Continuous Contract #1 (IR1) (Front Month)
Quandl("CHRIS/ASX_IR1", collapse = 'daily', start_date="2016-01-01", end_date="2020-03-25") %>%
mutate(date = as.Date(Date)) %>%
exam(`Previous Settlement`, 'day')
#House Price Indices - Seattle-Tacoma-Bellevue WA
Quandl("FMAC/HPI_42660", collapse = 'monthly', start_date = "2016-01-01", end_date = "2020-03-31") %>%
mutate(date = floor_date(Date, unit = "month")) %>%
exam(`NSA Value`, 'month')
#HPI - Washington State
Quandl("FMAC/HPI_WA", collapse = 'monthly', start_date = "2016-01-01", end_date = "2020-03-31") %>%
mutate(date = floor_date(Date, unit = "month")) %>%
exam(`NSA Value`, 'month')
#House Price Indices - Seattle-Tacoma-Bellevue WA
Quandl("FMAC/HPI_42660", collapse = 'monthly', start_date = "2016-01-01", end_date = "2020-03-31") %>%
mutate(date = floor_date(Date, unit = "month")) %>%
exam(`NSA Value`, 'month')
#HPI - Washington State
Quandl("FMAC/HPI_WA", collapse = 'monthly', start_date = "2016-01-01", end_date = "2020-03-31") %>%
mutate(date = floor_date(Date, unit = "month")) %>%
exam(`NSA Value`, 'month')
#15-Year Fixed Rate Mortgage Average in the United States
Quandl("FMAC/15US", collapse = 'monthly', start_date = "2016-01-01", end_date = "2020-03-31") %>%
mutate(date = floor_date(Date, unit = "month")) %>%
exam(`Value`, 'month')
#30-Year Fixed Rate Mortgage Average in the United States
Quandl("FMAC/30US", collapse = 'monthly', start_date = "2016-01-01", end_date = "2020-03-31") %>%
mutate(date = floor_date(Date, unit = "month")) %>%
exam(`Value`, 'month')
#5/1-Year Adjustable Rate Mortgage Average in the United States
Quandl("FMAC/5US", collapse = 'monthly', start_date = "2016-01-01", end_date = "2020-03-31") %>%
mutate(date = floor_date(Date, unit = "month")) %>%
exam(`Value`, 'month')
# Consumer Confidence Index full list https://data.oecd.org/leadind/consumer-confidence-index-cci.htm
cci <- read_csv("data/ConsumerConfidenceUSA.csv")
cci %>%
mutate(date = str_c(as.character(TIME), '-01')) %>%
mutate(date = as.Date(date, format = "%Y-%m-%d")) %>%
exam(`Value`, 'month')
# SAAR light vehicle sales https://fred.stlouisfed.org/series/ALTSALES
SAAR1 <- read_csv("data/ALTSALES.csv")
mutate(SAAR1, date = DATE) %>%
exam(`ALTSALES`, 'month')
# Total Vehicle  Sales https://fred.stlouisfed.org/series/TOTALSA
SAAR2 <- read_csv("data/TOTALSA.csv")
mutate(SAAR2, date = DATE) %>%
exam(`TOTALSA`, 'month')
#Light Trucks https://fred.stlouisfed.org/series/LTRUCKSA
SAAR3 <- read_csv("data/LTRUCKSA.csv")
mutate(SAAR3, date = DATE) %>%
exam(`LTRUCKSA`, 'month')
indicators_d <- df()
indicators_d <- data.frame()
indicators_d <- data.frame(date = Day_t$date)
exam <- function(data, y, time = "day") {
if (time == 'day'){
input <- select(data, date, {{y}})
data <- left_join(Day_t, input, by = "date") %>%
select(-date)
#correlation matrix
rac <- as.data.frame(
cor(data, use = "na.or.complete"))
#output running table somehow
indicators_d${{y}} <<- select(data, {{y}})
}
else if (time == 'month'){
input <- select(data, date, {{y}})
data <- left_join(Month_t, input, by = "date") %>%
select(-date)
#correlation matrix
rac <- as.data.frame(
cor(data, use = "na.or.complete"))
}
else(print("Error Help AHHHHHHH"))
#We only want last column of rac
#start running table?
#one for d and one for m
#how am I going to combine them
#for now just print it out
arrange(rac, desc(abs({{y}}))) %>%
select({{y}}) %>%
filter({{y}} != 1)
#Choose close variables and plot them with data
}
indicators_d <- data.frame(date = Day_t$date)
exam <- function(data, y, time = "day") {
if (time == 'day'){
input <- select(data, date, {{y}})
data <- left_join(Day_t, input, by = "date") %>%
select(-date)
#correlation matrix
rac <- as.data.frame(
cor(data, use = "na.or.complete"))
#output running table somehow
indicators_d <<- left_join(input, by = "date")
}
else if (time == 'month'){
input <- select(data, date, {{y}})
data <- left_join(Month_t, input, by = "date") %>%
select(-date)
#correlation matrix
rac <- as.data.frame(
cor(data, use = "na.or.complete"))
}
else(print("Error Help AHHHHHHH"))
#We only want last column of rac
#start running table?
#one for d and one for m
#how am I going to combine them
#for now just print it out
arrange(rac, desc(abs({{y}}))) %>%
select({{y}}) %>%
filter({{y}} != 1)
#Choose close variables and plot them with data
}
exam(data = GM, y = Adj.Close, time = "day")
exam(data = GM, y = Adj.Close, time = "day")
exam <- function(data, y, time = "day") {
if (time == 'day'){
input <- select(data, date, {{y}})
data <- left_join(Day_t, input, by = "date") %>%
select(-date)
#correlation matrix
rac <- as.data.frame(
cor(data, use = "na.or.complete"))
#output running table somehow
}
else if (time == 'month'){
input <- select(data, date, {{y}})
data <- left_join(Month_t, input, by = "date") %>%
select(-date)
#correlation matrix
rac <- as.data.frame(
cor(data, use = "na.or.complete"))
}
else(print("Error Help AHHHHHHH"))
#We only want last column of rac
#start running table?
#one for d and one for m
#how am I going to combine them
#for now just print it out
arrange(rac, desc(abs({{y}}))) %>%
select({{y}}) %>%
filter({{y}} != 1)
#Choose close variables and plot them with data
}
exam(data = GM, y = Adj.Close, time = "day")
